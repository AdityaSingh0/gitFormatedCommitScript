#!/bin/bash
#####################################################################################
#Script Name : Git Commit script
#Description : Adding and commiting files in a proper defined format
#Args : @Commit_id - first line comment @commit_message - second line commit message
#Author : Aditya Singh
#Email : aditya.notification@gmail.com
#####################################################################################
echo -e " \033[0;36m
#####################################################################################
#Script Name : Git Commit script
#Description : Adding and commiting files in a proper defined format
#Args : @Commit_id - first line comment @commit_message - second line commit message
#Author : Aditya Singh -  aditya.notification@gmail.com
#Contributor : Rajendra Singh Rana - ranarajendra386@gmail.com
##################################################################################### \033[0;37m" 
echo $'\n';

repos=( 
  "/c/Users/Win10/Documents/projects/store" #location to git rapo
  #you can add more repos here
)

#Reading user defined inputs start
echo "Enter First Line: "
read first_line
echo "Enter Commit Message: "
read commit_message
#Reading user defined inputs end

finalcommitMsq=$first_line
finalcommitMsq+=$'\n'
finalcommitMsq+='-'
finalcommitMsq+=$commit_message
finalcommitMsq+=$'\n'

echo $'\n';
echo $'\n';

for repo in "${repos[@]}"
do
  commitMessage=''
  echo ""
  echo -e "\033[1;32mScript Operation in " ${repo} " \033[0m"
  cd "${repo}"
  git config --global core.safecrlf false
  addedFiles=$(git ls-files --others --exclude-standard)
  output=`git status --porcelain`
  #$addedFiles && $output && 
  if [ -z "$output" ] && [ -z "$addedFiles" ]; then
    echo -e "\e[0;31m Nothing to commit Did you run ADD manually If yes then commit Manually \033[0;37m"
  else
    echo -e "\033[1;33m FILES THAT HAVE CHANGES \033[0;37m"
    echo "$output"
    echo "$addedFiles"
    echo "Do you want to commit these changes, y for yes and n for No in :  "
    read DECISION
    if [ "$DECISION" == "y" ]; then #Reading user defined inputs start
        files=`git diff --name-only` #getting modified/new file names
        #git add --all #adding all new/modified files
        #git status #added status
        f=''
        for file in $files; do #loop for new/modified file to make commit message start
            f+='-      modified:    '
            f+=$file
            f+=$'\n'
        done #loop for new/modified file to make commit message end
        for addF in $addedFiles; do
            f+='-      added:    '
            f+=$addF
            f+=$'\n'
        done
        commitMessage+=$finalcommitMsq
        commitMessage+=$f
        echo -e "\033[0;35m$commitMessage \033[0;37m"
        #git commit -m"$(echo -e "$commitMessage")" #commiting changes
        #git push origin dev
    else
        if ! [ "$DECISION" == "y"  -o "$DECISION" == "n" ]; then
            echo "Please choose y for yes and n for no"
        fi
    fi
  fi
  echo -e "\033[44m**END**END**${repo}**END**END** \033[0m"
done
echo "######################DONE Commiting#############"
